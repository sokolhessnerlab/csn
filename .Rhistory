}
return(durations)
}
get_recording_time_matrix <- function(id_vector, dimensional_reducer = 1) {
n_ids <- length(id_vector)
n_recordings <- 1 + length(etd_recordings[[id_vector[[1]]]]$time)
recordings_time_matrix <- matrix(NA, nrow=n_ids, ncol=n_recordings)
for (i in 1:(n_ids - 1)) {
id <- id_vector[i]
recordings_time_matrix[i,] <- c(id, (etd_recordings[[i]]$time / dimensional_reducer))
}
return(recordings_time_matrix)
}
get_recording_time_df <- function(id_vector, dimensional_reducer = 1) {
recording_time_df_cols <- c("id", "calibration", "validation", "task", "revalidation")
df <- as.data.frame(get_recording_time_matrix(id_vector, dimensional_reducer))
colnames(df) <- recording_time_df_cols
return(df)
}
recording_time_df <- get_recording_time_df(get_recording_time_matrix(id_vector))
recording_time_df_minutes <- get_recording_time_df(get_recording_time_matrix(id_vector, 1000 * 60))
get_duration <- function(id) {
# Duration from highest start time and lowest start time, in minutes
summary <- etd_recordings[[id]] %>%
summarize(duration = (max(time) - min(time)) / (1000*60) ) %>%
unnest(cols = c())
return(summary$duration)
}
get_durations <- function(id_vector) {
# Durations in minutes for all participants events' data
durations <- c()
for (i in id_vector) {
durations <- c(durations, get_duration(i))
}
return(durations)
}
get_recording_time_matrix <- function(id_vector, dimensional_reducer = 1) {
n_ids <- length(id_vector)
n_recordings <- 1 + length(etd_recordings[[id_vector[[1]]]]$time)
recordings_time_matrix <- matrix(NA, nrow=n_ids, ncol=n_recordings)
for (i in 1:(n_ids - 1)) {
id <- id_vector[i]
recordings_time_matrix[i,] <- c(id, (etd_recordings[[id]]$time / dimensional_reducer))
}
return(recordings_time_matrix)
}
get_recording_time_df <- function(id_vector, dimensional_reducer = 1) {
recording_time_df_cols <- c("id", "calibration", "validation", "task", "revalidation")
df <- as.data.frame(get_recording_time_matrix(id_vector, dimensional_reducer))
colnames(df) <- recording_time_df_cols
return(df)
}
recording_time_df_minutes <- get_recording_time_df(get_recording_time_matrix(id_vector, 1000 * 60))
#recording_time_df_minutes <- get_recording_time_df(get_recording_time_matrix(id_vector, 1000 * 60))
#recording_time_df_minutes
length(id_vector)
#recording_time_df_minutes <- get_recording_time_df(get_recording_time_matrix(id_vector, 1000 * 60))
#recording_time_df_minutes
id_vector
get_duration <- function(id) {
# Duration from highest start time and lowest start time, in minutes
summary <- etd_recordings[[id]] %>%
summarize(duration = (max(time) - min(time)) / (1000*60) ) %>%
unnest(cols = c())
return(summary$duration)
}
get_durations <- function(id_vector) {
# Durations in minutes for all participants events' data
durations <- c()
for (i in id_vector) {
durations <- c(durations, get_duration(i))
}
return(durations)
}
get_recording_time_matrix <- function(id_vector, dimensional_reducer = 1) {
n_ids <- length(id_vector)
n_recordings <- 1 + length(etd_recordings[[id_vector[[1]]]]$time)
recording_time_matrix <- matrix(NA, nrow=n_ids, ncol=n_recordings)
for (i in 1:n_ids) {
id <- id_vector[i]
recording_time_matrix[i,] <- c(id, (etd_recordings[[id]]$time / dimensional_reducer))
}
return(recording_time_matrix)
}
get_recording_time_df <- function(id_vector, dimensional_reducer = 1) {
df <- as.data.frame(get_recording_time_matrix(id_vector, dimensional_reducer))
recording_time_df_cols <- c("id", "calibration", "validation", "task", "revalidation")
colnames(df) <- recording_time_df_cols
return(df)
}
#recording_time_df_minutes <- get_recording_time_df(get_recording_time_matrix(id_vector, 1000 * 60))
#recording_time_df_minutes
size(etd_recordings)
#recording_time_df_minutes <- get_recording_time_df(get_recording_time_matrix(id_vector, 1000 * 60))
#recording_time_df_minutes
length(etd_recordings)
recording_time_df_minutes <- get_recording_time_df(get_recording_time_matrix(id_vector, 1000 * 60))
#recording_time_df_minutes <- get_recording_time_df(get_recording_time_matrix(id_vector, 1000 * 60))
#recording_time_df_minutes
#length(etd_recordings)
get_recording_time_matrix(id_vector)
get_duration <- function(id) {
# Duration from highest start time and lowest start time, in minutes
summary <- etd_recordings[[id]] %>%
summarize(duration = (max(time) - min(time)) / (1000*60) ) %>%
unnest(cols = c())
return(summary$duration)
}
get_durations <- function(id_vector) {
# Durations in minutes for all participants events' data
durations <- c()
for (i in id_vector) {
durations <- c(durations, get_duration(i))
}
return(durations)
}
get_recording_time_matrix <- function(id_vector, dimensional_reducer = 1) {
n_ids <- length(id_vector)
n_recordings <- 1 + length(etd_recordings[[id_vector[[1]]]]$time)
recording_time_matrix <- matrix(NA, nrow=n_ids, ncol=n_recordings)
for (i in 1:n_ids) {
id <- id_vector[i]
#recording_time_matrix[i,] <- c(id, (etd_recordings[[id]]$time / dimensional_reducer))
}
#return(recording_time_matrix)
}
get_recording_time_df <- function(id_vector, dimensional_reducer = 1) {
df <- as.data.frame(get_recording_time_matrix(id_vector, dimensional_reducer))
recording_time_df_cols <- c("id", "calibration", "validation", "task", "revalidation")
colnames(df) <- recording_time_df_cols
return(df)
}
#recording_time_df_minutes <- get_recording_time_df(get_recording_time_matrix(id_vector, 1000 * 60))
#recording_time_df_minutes
#length(etd_recordings)
get_recording_time_matrix(id_vector)
get_duration <- function(id) {
# Duration from highest start time and lowest start time, in minutes
summary <- etd_recordings[[id]] %>%
summarize(duration = (max(time) - min(time)) / (1000*60) ) %>%
unnest(cols = c())
return(summary$duration)
}
get_durations <- function(id_vector) {
# Durations in minutes for all participants events' data
durations <- c()
for (i in id_vector) {
durations <- c(durations, get_duration(i))
}
return(durations)
}
get_recording_time_matrix <- function(id_vector, dimensional_reducer = 1) {
n_ids <- length(id_vector)
n_recordings <- 1 + length(etd_recordings[[id_vector[[1]]]]$time)
recording_time_matrix <- matrix(NA, nrow=n_ids, ncol=n_recordings)
for (i in 1:n_ids) {
id <- id_vector[i]
recording_time_matrix[i,] <- c(id, (etd_recordings[[id]]$time / dimensional_reducer))
}
return(recording_time_matrix)
}
get_recording_time_df <- function(id_vector, dimensional_reducer = 1) {
df <- as.data.frame(get_recording_time_matrix(id_vector, dimensional_reducer))
recording_time_df_cols <- c("id", "calibration", "validation", "task", "revalidation")
colnames(df) <- recording_time_df_cols
return(df)
}
#recording_time_df_minutes <- get_recording_time_df(get_recording_time_matrix(id_vector, 1000 * 60))
#recording_time_df_minutes
#length(etd_recordings)
get_recording_time_matrix(id_vector)
get_duration <- function(id) {
# Duration from highest start time and lowest start time, in minutes
summary <- etd_recordings[[id]] %>%
summarize(duration = (max(time) - min(time)) / (1000*60) ) %>%
unnest(cols = c())
return(summary$duration)
}
get_durations <- function(id_vector) {
# Durations in minutes for all participants events' data
durations <- c()
for (i in id_vector) {
durations <- c(durations, get_duration(i))
}
return(durations)
}
get_recording_time_matrix <- function(id_vector, dimensional_reducer = 1) {
n_ids <- length(id_vector)
n_recordings <- 1 + length(etd_recordings[[id_vector[[1]]]]$time)
recording_time_matrix <- matrix(NA, nrow=n_ids, ncol=n_recordings)
for (i in 1:n_ids) {
id <- id_vector[i]
recording_time_matrix[i,] <- c(id, (etd_recordings[[id]]$time / dimensional_reducer))
}
return(recording_time_matrix)
}
get_recording_time_df <- function(id_vector, dimensional_reducer = 1) {
m <- get_recording_time_matrix(id_vector, dimensional_reducer)
df <- as.data.frame(m)
recording_time_df_cols <- c("id", "calibration", "validation", "task", "revalidation")
colnames(df) <- recording_time_df_cols
return(df)
}
#recording_time_df_minutes <- get_recording_time_df(get_recording_time_matrix(id_vector, 1000 * 60))
#recording_time_df_minutes
#length(etd_recordings)
get_recording_time_df(id_vector)
#recording_time_df_minutes <- get_recording_time_df(get_recording_time_matrix(id_vector, 1000 * 60))
#recording_time_df_minutes
#length(etd_recordings)
get_recording_time_df(id_vector)
#recording_time_df_minutes <- get_recording_time_df(get_recording_time_matrix(id_vector, 1000 * 60))
#recording_time_df_minutes
#length(etd_recordings)
get_recording_time_df(id_vector,1)
#recording_time_df_minutes <- get_recording_time_df(get_recording_time_matrix(id_vector, 1000 * 60))
#recording_time_df_minutes
#length(etd_recordings)
get_recording_time_df(id_vector, 1000)
#recording_time_df_minutes <- get_recording_time_df(get_recording_time_matrix(id_vector, 1000 * 60))
#recording_time_df_minutes
#length(etd_recordings)
get_recording_time_df(id_vector, 1000 * 60)
recording_time_df_minutes <- get_recording_time_df(id_vector, 1000 * 60)
recording_time_df_minutes
get_duration <- function(id) {
# Duration from highest start time and lowest start time, in minutes
summary <- etd_recordings[[id]] %>%
summarize(duration = (max(time) - min(time)) / (1000*60) ) %>%
unnest(cols = c())
return(summary$duration)
}
get_durations <- function(id_vector) {
# Durations in minutes for all participants events' data
durations <- c()
for (i in id_vector) {
durations <- c(durations, get_duration(i))
}
return(durations)
}
get_recording_time_matrix <- function(id_vector, dimensional_reducer = 1) {
# Get a built matrix with a row for each id in id_vector, with four
# times per row. Optional dimensional reducer to achieve times in seconds, minutes.
n_ids <- length(id_vector)
n_recordings <- 1 + length(etd_recordings[[id_vector[[1]]]]$time)
recording_time_matrix <- matrix(NA, nrow=n_ids, ncol=n_recordings)
for (i in 1:n_ids) {
id <- id_vector[i]
recording_time_matrix[i,] <- c(id, (etd_recordings[[id]]$time / dimensional_reducer))
}
return(recording_time_matrix)
}
get_recording_time_df <- function(id_vector, dimensional_reducer = 1) {
# Get dataframe using matrix of ids and times from recordings. Optional
# dimensional reducer to achieve times in seconds, minutes.
m <- get_recording_time_matrix(id_vector, dimensional_reducer)
df <- as.data.frame(m)
recording_time_df_cols <- c("id", "calibration", "validation", "task", "revalidation")
colnames(df) <- recording_time_df_cols
return(df)
}
get_duration <- function(id) {
# Duration from highest start time and lowest start time, in minutes
summary <- etd_recordings[[id]] %>%
summarize(duration = (max(time) - min(time)) / (1000*60) ) %>%
unnest(cols = c())
return(summary$duration)
}
get_durations <- function(id_vector) {
# Durations in minutes for all participants events' data
durations <- c()
for (i in id_vector) {
durations <- c(durations, get_duration(i))
}
return(durations)
}
get_recording_time_matrix <- function(id_vector, dimensional_reducer = 1) {
# Get a built matrix with a row for each id in id_vector, with four
# times per row. Optional dimensional reducer to achieve times in seconds, minutes.
n_ids <- length(id_vector)
n_recordings <- 1 + length(etd_recordings[[id_vector[[1]]]]$time)
recording_time_matrix <- matrix(NA, nrow=n_ids, ncol=n_recordings)
for (i in 1:n_ids) {
id <- id_vector[i]
recording_time_matrix[i,] <- c(id, (etd_recordings[[id]]$time / dimensional_reducer))
}
return(recording_time_matrix)
}
get_recording_time_df <- function(id_vector, dimensional_reducer = 1) {
# Get dataframe using matrix of ids and times from recordings. Optional
# dimensional reducer to achieve times in seconds, minutes.
m <- get_recording_time_matrix(id_vector, dimensional_reducer)
df <- as.data.frame(m)
recording_time_df_cols <- c("id", "calibration", "validation", "task", "revalidation")
colnames(df) <- recording_time_df_cols
return(df)
}
recording_time_df_minutes <- get_recording_time_df(id_vector, 1000 * 60)
recording_time_df_minutes
recording_time_df_minutes <- get_recording_time_df(id_vector, 1000 * 60)
recording_time_df_minutes
recording_time_df_minutes <- get_recording_time_df(id_vector, 1000 * 60)
recording_time_df_minutes$revalidation - recording_time_df_minutes$task
recording_time_df_minutes <- get_recording_time_df(id_vector, 1000 * 60)
sort(recording_time_df_minutes$revalidation - recording_time_df_minutes$task)
recording_time_df_seconds <- get_recording_time_df(id_vector, 1000)
recording_time_df_minutes <- get_recording_time_df(id_vector, 1000 * 60)
sort(recording_time_df_seconds$revalidation - recording_time_df_seconds$task)
recording_time_df_seconds <- get_recording_time_df(id_vector, 1000)
recording_time_df_minutes <- get_recording_time_df(id_vector, 1000 * 60)
sort(recording_time_df_seconds$revalidation - recording_time_df_seconds$task - 3600)
recording_time_df_seconds
recording_time_df_seconds$calibration
get_recording_time_df(id_vector)
etd_events
etd_events[[1]]
get_recording_time_df(id_vector)
etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_events
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
recording_time_df %>% filter(id == 1)
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
recording_time_df %>% filter(id == 1) %>% unlist()
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1) %>% unlist()
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1) %>% unlist()
csn001_recordings$calibration
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1) %>% unlist()
csn001_recordings
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1)
csn001_recordings
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1)
csn001_recordings$calibration
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1)
csn001_recordings$calibration
csn001_events %>% filter(sttime == csn001_recordings$calibration)
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1)
csn001_recordings$calibration
csn001_events %>% filter(sttime == csn001_recordings$calibration + 1)
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1)
csn001_recordings$calibration
csn001_events %>% filter(sttime == csn001_recordings$calibration + 2)
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1)
csn001_recordings$calibration
csn001_events %>% filter(sttime == csn001_recordings$calibration + 3)
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1)
csn001_recordings$calibration
csn001_events %>% filter(sttime > csn001_recordings$calibration)
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1)
csn001_recordings$calibration
csn001_events %>% filter(sttime > csn001_recordings$calibration) %>% relocate(message)
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1)
csn001_recordings$calibration
csn001_events %>% filter(sttime > csn001_recordings$validation) %>% relocate(message)
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1)
csn001_recordings$calibration
csn001_events %>% filter(sttime > csn001_recordings$calibration) %>% relocate(message)
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1)
csn001_recordings$calibration
csn001_events %>%
filter(sttime > csn001_recordings$calibration) %>%
filter(sttime < csn001_recordings$validation)
relocate(message)
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1)
csn001_recordings$calibration
csn001_events %>%
filter(sttime > csn001_recordings$calibration) %>%
filter(sttime < csn001_recordings$validation) %>%
relocate(message)
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1)
csn001_recordings$calibration
csn001_events %>%
filter(sttime > csn001_recordings$calibration) %>%
filter(entime < csn001_recordings$validation) %>%
relocate(message)
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1)
csn001_recordings$calibration
csn001_events %>%
filter(sttime > csn001_recordings$calibration) %>%
filter(sttime < csn001_recordings$validation) %>%
relocate(message)
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1)
csn001_recordings$calibration
csn001_events %>%
filter(sttime > csn001_recordings$calibration) %>%
filter(sttime <= csn001_recordings$validation) %>%
relocate(message)
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1)
csn001_recordings$calibration
csn001_events %>%
filter(sttime > csn001_recordings$calibration) %>%
#filter(sttime <= csn001_recordings$validation) %>%
relocate(message)
1006763	- 881874
(1006763	- 881874) / 1000
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1)
csn001_recordings$calibration
csn001_events %>%
filter(sttime > csn001_recordings$calibration) %>%
filter(sttime <= csn001_recordings$validation) %>%
relocate(message)
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1)
csn001_recordings$calibration
csn001_events %>%
filter(sttime > csn001_recordings$calibration) %>%
filter(sttime <= csn001_recordings$task) %>%
relocate(message)
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1)
csn001_recordings$calibration
csn001_events %>%
filter(sttime > csn001_recordings$calibration) %>%
filter(sttime <= csn001_recordings$validation + 1) %>%
relocate(message)
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1)
csn001_recordings$calibration
csn001_events %>%
filter(sttime > csn001_recordings$calibration) %>%
filter(sttime <= csn001_recordings$validation) %>%
relocate(message)
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1)
csn001_recordings$calibration
csn001_events %>%
filter(sttime > csn001_recordings$calibration) %>%
relocate(message)
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1)
csn001_recordings$calibration
csn001_events %>%
filter(sttime > csn001_recordings$calibration) %>%
relocate(message)
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1)
csn001_recordings$calibration
csn001_events %>%
filter(sttime == csn001_recordings$calibration) %>%
relocate(message)
(1006763	- 881864) / 1000
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1)
csn001_recordings$calibration
csn001_events %>%
filter(sttime == csn001_recordings$validation) %>%
relocate(message)
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1)
csn001_recordings$calibration
csn001_events %>%
filter(sttime >= csn001_recordings$validation) %>%
relocate(message)
csn001_events <- etd_events[[1]]
recording_time_df <- get_recording_time_df(id_vector)
csn001_recordings <- recording_time_df %>% filter(id == 1)
csn001_recordings$calibration
csn001_events %>%
filter(sttime >= csn001_recordings$task) %>%
relocate(message)
